

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Feb 12 14:07:43 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Generated 12/10/2023 GMT
    11                           ; 
    12                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution. Publication is not required when
    26                           ;        this file is used in an embedded application.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0004                     fsr             equ	4
    45     0004                     fsr0            equ	4
    46     0000                     indf            equ	0
    47     0000                     indf0           equ	0
    48     0002                     pc              equ	2
    49     0002                     pcl             equ	2
    50     000A                     pclath          equ	10
    51     0003                     status          equ	3
    52     0000                     INDF            equ	0	;# 
    53     0001                     TMR0            equ	1	;# 
    54     0002                     PCL             equ	2	;# 
    55     0003                     STATUS          equ	3	;# 
    56     0004                     FSR             equ	4	;# 
    57     0005                     PORTA           equ	5	;# 
    58     0006                     PORTB           equ	6	;# 
    59     0007                     PORTC           equ	7	;# 
    60     0008                     PORTD           equ	8	;# 
    61     0009                     PORTE           equ	9	;# 
    62     000A                     PCLATH          equ	10	;# 
    63     000B                     INTCON          equ	11	;# 
    64     000C                     PIR1            equ	12	;# 
    65     000D                     PIR2            equ	13	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0011                     TMR2            equ	17	;# 
    71     0012                     T2CON           equ	18	;# 
    72     0013                     SSPBUF          equ	19	;# 
    73     0014                     SSPCON          equ	20	;# 
    74     0015                     CCPR1           equ	21	;# 
    75     0015                     CCPR1L          equ	21	;# 
    76     0016                     CCPR1H          equ	22	;# 
    77     0017                     CCP1CON         equ	23	;# 
    78     0018                     RCSTA           equ	24	;# 
    79     0019                     TXREG           equ	25	;# 
    80     001A                     RCREG           equ	26	;# 
    81     001B                     CCPR2           equ	27	;# 
    82     001B                     CCPR2L          equ	27	;# 
    83     001C                     CCPR2H          equ	28	;# 
    84     001D                     CCP2CON         equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     0088                     TRISD           equ	136	;# 
    92     0089                     TRISE           equ	137	;# 
    93     008C                     PIE1            equ	140	;# 
    94     008D                     PIE2            equ	141	;# 
    95     008E                     PCON            equ	142	;# 
    96     0091                     SSPCON2         equ	145	;# 
    97     0092                     PR2             equ	146	;# 
    98     0093                     SSPADD          equ	147	;# 
    99     0094                     SSPSTAT         equ	148	;# 
   100     0098                     TXSTA           equ	152	;# 
   101     0099                     SPBRG           equ	153	;# 
   102     009C                     CMCON           equ	156	;# 
   103     009D                     CVRCON          equ	157	;# 
   104     009E                     ADRESL          equ	158	;# 
   105     009F                     ADCON1          equ	159	;# 
   106     010C                     EEDATA          equ	268	;# 
   107     010D                     EEADR           equ	269	;# 
   108     010E                     EEDATH          equ	270	;# 
   109     010F                     EEADRH          equ	271	;# 
   110     018C                     EECON1          equ	396	;# 
   111     018D                     EECON2          equ	397	;# 
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     0007                     PORTC           equ	7	;# 
   120     0008                     PORTD           equ	8	;# 
   121     0009                     PORTE           equ	9	;# 
   122     000A                     PCLATH          equ	10	;# 
   123     000B                     INTCON          equ	11	;# 
   124     000C                     PIR1            equ	12	;# 
   125     000D                     PIR2            equ	13	;# 
   126     000E                     TMR1            equ	14	;# 
   127     000E                     TMR1L           equ	14	;# 
   128     000F                     TMR1H           equ	15	;# 
   129     0010                     T1CON           equ	16	;# 
   130     0011                     TMR2            equ	17	;# 
   131     0012                     T2CON           equ	18	;# 
   132     0013                     SSPBUF          equ	19	;# 
   133     0014                     SSPCON          equ	20	;# 
   134     0015                     CCPR1           equ	21	;# 
   135     0015                     CCPR1L          equ	21	;# 
   136     0016                     CCPR1H          equ	22	;# 
   137     0017                     CCP1CON         equ	23	;# 
   138     0018                     RCSTA           equ	24	;# 
   139     0019                     TXREG           equ	25	;# 
   140     001A                     RCREG           equ	26	;# 
   141     001B                     CCPR2           equ	27	;# 
   142     001B                     CCPR2L          equ	27	;# 
   143     001C                     CCPR2H          equ	28	;# 
   144     001D                     CCP2CON         equ	29	;# 
   145     001E                     ADRESH          equ	30	;# 
   146     001F                     ADCON0          equ	31	;# 
   147     0081                     OPTION_REG      equ	129	;# 
   148     0085                     TRISA           equ	133	;# 
   149     0086                     TRISB           equ	134	;# 
   150     0087                     TRISC           equ	135	;# 
   151     0088                     TRISD           equ	136	;# 
   152     0089                     TRISE           equ	137	;# 
   153     008C                     PIE1            equ	140	;# 
   154     008D                     PIE2            equ	141	;# 
   155     008E                     PCON            equ	142	;# 
   156     0091                     SSPCON2         equ	145	;# 
   157     0092                     PR2             equ	146	;# 
   158     0093                     SSPADD          equ	147	;# 
   159     0094                     SSPSTAT         equ	148	;# 
   160     0098                     TXSTA           equ	152	;# 
   161     0099                     SPBRG           equ	153	;# 
   162     009C                     CMCON           equ	156	;# 
   163     009D                     CVRCON          equ	157	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     010C                     EEDATA          equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     018C                     EECON1          equ	396	;# 
   171     018D                     EECON2          equ	397	;# 
   172     0001                     _TMR0           set	1
   173     0006                     _PORTB          set	6
   174     005A                     _TMR0IF         set	90
   175     0081                     _OPTION_REG     set	129
   176     0086                     _TRISB          set	134
   177                           
   178                           	psect	cinit
   179     07FC                     start_initialization:	
   180                           ; #config settings
   181                           
   182     07FC                     __initialization:
   183     07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     07FC                     __end_of__initialization:
   187     07FC  0183               	clrf	3
   188     07FD  120A  118A  2F5B   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191     0070                     __pcstackCOMMON:
   192     0070                     ?_showDigit:
   193     0070                     ?_main:	
   194                           ; 1 bytes @ 0x0
   195                           
   196     0070                     showDigit@digit:	
   197                           ; 1 bytes @ 0x0
   198                           
   199                           
   200                           ; 2 bytes @ 0x0
   201     0070                     	ds	2
   202     0072                     ??_showDigit:
   203                           
   204                           ; 1 bytes @ 0x2
   205     0072                     	ds	1
   206     0073                     ??_main:
   207                           
   208                           ; 1 bytes @ 0x3
   209     0073                     	ds	2
   210     0075                     main@count:
   211                           
   212                           ; 2 bytes @ 0x5
   213     0075                     	ds	2
   214     0077                     main@digit1:
   215                           
   216                           ; 1 bytes @ 0x7
   217     0077                     	ds	1
   218     0078                     main@digit3:
   219                           
   220                           ; 1 bytes @ 0x8
   221     0078                     	ds	1
   222     0079                     main@digit4:
   223                           
   224                           ; 1 bytes @ 0x9
   225     0079                     	ds	1
   226     007A                     main@digit2:
   227                           
   228                           ; 1 bytes @ 0xA
   229     007A                     	ds	1
   230                           
   231                           	psect	maintext
   232     075B                     __pmaintext:	
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 23 in file "C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;  count           2    5[COMMON] unsigned short 
   243 ;;  digit2          1   10[COMMON] unsigned char 
   244 ;;  digit4          1    9[COMMON] unsigned char 
   245 ;;  digit3          1    8[COMMON] unsigned char 
   246 ;;  digit1          1    7[COMMON] unsigned char 
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2, status,0, pclath, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : B00/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   256 ;;      Params:         0       0       0       0       0
   257 ;;      Locals:         6       0       0       0       0
   258 ;;      Temps:          2       0       0       0       0
   259 ;;      Totals:         8       0       0       0       0
   260 ;;Total ram usage:        8 bytes
   261 ;; Hardware stack levels required when called: 1
   262 ;; This function calls:
   263 ;;		_showDigit
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269     075B                     _main:	
   270                           ;psect for function _main
   271                           
   272     075B                     l643:	
   273                           ;incstack = 0
   274                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   275                           
   276                           
   277                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 26:     TRISB = 0x00;
   278     075B  1683               	bsf	3,5	;RP0=1, select bank1
   279     075C  1303               	bcf	3,6	;RP1=0, select bank1
   280     075D  0186               	clrf	6	;volatile
   281                           
   282                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 27:     PORTB = 0x00;
   283     075E  1283               	bcf	3,5	;RP0=0, select bank0
   284     075F  1303               	bcf	3,6	;RP1=0, select bank0
   285     0760  0186               	clrf	6	;volatile
   286                           
   287                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 29:     uint8_t digit1 = 0,
      +                           digit2 = 0, digit3 = 0, digit4 = 0;
   288     0761  01F7               	clrf	main@digit1
   289     0762  01FA               	clrf	main@digit2
   290     0763  01F8               	clrf	main@digit3
   291     0764  01F9               	clrf	main@digit4
   292     0765                     l645:
   293                           
   294                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 33:     OPTION_REG = 0x07;
   295     0765  3007               	movlw	7
   296     0766  1683               	bsf	3,5	;RP0=1, select bank1
   297     0767  1303               	bcf	3,6	;RP1=0, select bank1
   298     0768  0081               	movwf	1	;volatile
   299                           
   300                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 34:     TMR0 = 0 ;
   301     0769  1283               	bcf	3,5	;RP0=0, select bank0
   302     076A  1303               	bcf	3,6	;RP1=0, select bank0
   303     076B  0181               	clrf	1	;volatile
   304                           
   305                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 35:     uint16_t count = 0;
   306     076C  01F5               	clrf	main@count
   307     076D  01F6               	clrf	main@count+1
   308     076E                     l647:
   309                           
   310                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 38:         if(TMR0IF){
   311     076E  1D0B               	btfss	11,2	;volatile
   312     076F  2F71               	goto	u81
   313     0770  2F72               	goto	u80
   314     0771                     u81:
   315     0771  2FA4               	goto	l681
   316     0772                     u80:
   317     0772                     l649:
   318                           
   319                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 39:             TMR0IF = 0;
   320     0772  110B               	bcf	11,2	;volatile
   321     0773                     l651:
   322                           
   323                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 40:             count++;
   324     0773  3001               	movlw	1
   325     0774  07F5               	addwf	main@count,f
   326     0775  1803               	skipnc
   327     0776  0AF6               	incf	main@count+1,f
   328     0777  3000               	movlw	0
   329     0778  07F6               	addwf	main@count+1,f
   330                           
   331                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 41:             if(count >=
      +                           76){
   332     0779  3000               	movlw	0
   333     077A  0276               	subwf	main@count+1,w
   334     077B  304C               	movlw	76
   335     077C  1903               	skipnz
   336     077D  0275               	subwf	main@count,w
   337     077E  1C03               	skipc
   338     077F  2F81               	goto	u91
   339     0780  2F82               	goto	u90
   340     0781                     u91:
   341     0781  2FA4               	goto	l681
   342     0782                     u90:
   343     0782                     l653:
   344                           
   345                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 42:                 count =
      +                           0;
   346     0782  01F5               	clrf	main@count
   347     0783  01F6               	clrf	main@count+1
   348     0784                     l655:
   349                           
   350                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 43:                 if(digi
      +                          t4 == 9){
   351     0784  3009               	movlw	9
   352     0785  0679               	xorwf	main@digit4,w
   353     0786  1D03               	btfss	3,2
   354     0787  2F89               	goto	u101
   355     0788  2F8A               	goto	u100
   356     0789                     u101:
   357     0789  2FA2               	goto	l679
   358     078A                     u100:
   359     078A                     l657:
   360                           
   361                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 44:                     dig
      +                          it4 = 0;
   362     078A  01F9               	clrf	main@digit4
   363     078B                     l659:
   364                           
   365                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 45:                     if(
      +                          digit3 == 5){
   366     078B  3005               	movlw	5
   367     078C  0678               	xorwf	main@digit3,w
   368     078D  1D03               	btfss	3,2
   369     078E  2F90               	goto	u111
   370     078F  2F91               	goto	u110
   371     0790                     u111:
   372     0790  2F9F               	goto	l677
   373     0791                     u110:
   374     0791                     l661:
   375                           
   376                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 46:                        
      +                           digit3 = 0;
   377     0791  01F8               	clrf	main@digit3
   378     0792                     l663:
   379                           
   380                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 47:                        
      +                           if(digit2 == 9){
   381     0792  3009               	movlw	9
   382     0793  067A               	xorwf	main@digit2,w
   383     0794  1D03               	btfss	3,2
   384     0795  2F97               	goto	u121
   385     0796  2F98               	goto	u120
   386     0797                     u121:
   387     0797  2F9C               	goto	l675
   388     0798                     u120:
   389     0798                     l665:
   390                           
   391                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 48:                        
      +                               digit2 = 0;
   392     0798  01FA               	clrf	main@digit2
   393     0799                     l673:
   394                           
   395                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 54:                        
      +                                   digit1++;
   396     0799  3001               	movlw	1
   397     079A  07F7               	addwf	main@digit1,f
   398     079B  2FA4               	goto	l681
   399     079C                     l675:
   400                           
   401                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 58:                        
      +                               digit2++;
   402     079C  3001               	movlw	1
   403     079D  07FA               	addwf	main@digit2,f
   404     079E  2FA4               	goto	l681
   405     079F                     l677:
   406                           
   407                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 62:                        
      +                           digit3++;
   408     079F  3001               	movlw	1
   409     07A0  07F8               	addwf	main@digit3,f
   410     07A1  2FA4               	goto	l681
   411     07A2                     l679:
   412                           
   413                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 66:                     dig
      +                          it4++;
   414     07A2  3001               	movlw	1
   415     07A3  07F9               	addwf	main@digit4,f
   416     07A4                     l681:
   417                           
   418                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 70:         PORTB = digit4;
   419     07A4  0879               	movf	main@digit4,w
   420     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   421     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   422     07A7  0086               	movwf	6	;volatile
   423     07A8                     l683:
   424                           
   425                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 71:         showDigit(4);
   426     07A8  3004               	movlw	4
   427     07A9  00F0               	movwf	showDigit@digit
   428     07AA  3000               	movlw	0
   429     07AB  00F1               	movwf	showDigit@digit+1
   430     07AC  120A  118A  2749  120A  118A  	fcall	_showDigit
   431     07B1                     l685:
   432                           
   433                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 72:         _delay((unsigne
      +                          d long)((1)*(20000000/4000.0)));
   434     07B1  3007               	movlw	7
   435     07B2  00F4               	movwf	??_main+1
   436     07B3  307D               	movlw	125
   437     07B4  00F3               	movwf	??_main
   438     07B5                     u137:
   439     07B5  0BF3               	decfsz	??_main,f
   440     07B6  2FB5               	goto	u137
   441     07B7  0BF4               	decfsz	??_main+1,f
   442     07B8  2FB5               	goto	u137
   443     07B9                     l687:
   444                           
   445                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 73:         PORTB = digit3;
   446     07B9  0878               	movf	main@digit3,w
   447     07BA  1283               	bcf	3,5	;RP0=0, select bank0
   448     07BB  1303               	bcf	3,6	;RP1=0, select bank0
   449     07BC  0086               	movwf	6	;volatile
   450     07BD                     l689:
   451                           
   452                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 74:         showDigit(3);
   453     07BD  3003               	movlw	3
   454     07BE  00F0               	movwf	showDigit@digit
   455     07BF  3000               	movlw	0
   456     07C0  00F1               	movwf	showDigit@digit+1
   457     07C1  120A  118A  2749  120A  118A  	fcall	_showDigit
   458     07C6                     l691:
   459                           
   460                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 75:         _delay((unsigne
      +                          d long)((1)*(20000000/4000.0)));
   461     07C6  3007               	movlw	7
   462     07C7  00F4               	movwf	??_main+1
   463     07C8  307D               	movlw	125
   464     07C9  00F3               	movwf	??_main
   465     07CA                     u147:
   466     07CA  0BF3               	decfsz	??_main,f
   467     07CB  2FCA               	goto	u147
   468     07CC  0BF4               	decfsz	??_main+1,f
   469     07CD  2FCA               	goto	u147
   470     07CE                     l693:
   471                           
   472                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 76:         PORTB = digit2;
   473     07CE  087A               	movf	main@digit2,w
   474     07CF  1283               	bcf	3,5	;RP0=0, select bank0
   475     07D0  1303               	bcf	3,6	;RP1=0, select bank0
   476     07D1  0086               	movwf	6	;volatile
   477     07D2                     l695:
   478                           
   479                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 77:         showDigit(2);
   480     07D2  3002               	movlw	2
   481     07D3  00F0               	movwf	showDigit@digit
   482     07D4  3000               	movlw	0
   483     07D5  00F1               	movwf	showDigit@digit+1
   484     07D6  120A  118A  2749  120A  118A  	fcall	_showDigit
   485     07DB                     l697:
   486                           
   487                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 78:         _delay((unsigne
      +                          d long)((1)*(20000000/4000.0)));
   488     07DB  3007               	movlw	7
   489     07DC  00F4               	movwf	??_main+1
   490     07DD  307D               	movlw	125
   491     07DE  00F3               	movwf	??_main
   492     07DF                     u157:
   493     07DF  0BF3               	decfsz	??_main,f
   494     07E0  2FDF               	goto	u157
   495     07E1  0BF4               	decfsz	??_main+1,f
   496     07E2  2FDF               	goto	u157
   497     07E3                     l699:
   498                           
   499                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 79:         PORTB = digit1;
   500     07E3  0877               	movf	main@digit1,w
   501     07E4  1283               	bcf	3,5	;RP0=0, select bank0
   502     07E5  1303               	bcf	3,6	;RP1=0, select bank0
   503     07E6  0086               	movwf	6	;volatile
   504     07E7                     l701:
   505                           
   506                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 80:         showDigit(1);
   507     07E7  3001               	movlw	1
   508     07E8  00F0               	movwf	showDigit@digit
   509     07E9  3000               	movlw	0
   510     07EA  00F1               	movwf	showDigit@digit+1
   511     07EB  120A  118A  2749  120A  118A  	fcall	_showDigit
   512     07F0                     l703:
   513                           
   514                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 81:         _delay((unsigne
      +                          d long)((1)*(20000000/4000.0)));
   515     07F0  3007               	movlw	7
   516     07F1  00F4               	movwf	??_main+1
   517     07F2  307D               	movlw	125
   518     07F3  00F3               	movwf	??_main
   519     07F4                     u167:
   520     07F4  0BF3               	decfsz	??_main,f
   521     07F5  2FF4               	goto	u167
   522     07F6  0BF4               	decfsz	??_main+1,f
   523     07F7  2FF4               	goto	u167
   524     07F8  2F6E               	goto	l647
   525     07F9  120A  118A  2800   	ljmp	start
   526     07FC                     __end_of_main:
   527                           
   528                           	psect	text1
   529     0749                     __ptext1:	
   530 ;; *************** function _showDigit *****************
   531 ;; Defined at:
   532 ;;		line 18 in file "C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  digit           2    0[COMMON] unsigned short 
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, status,2, status,0
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         2       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0
   548 ;;      Temps:          1       0       0       0       0
   549 ;;      Totals:         3       0       0       0       0
   550 ;;Total ram usage:        3 bytes
   551 ;; Hardware stack levels used: 1
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559     0749                     _showDigit:	
   560                           ;psect for function _showDigit
   561                           
   562     0749                     l641:	
   563                           ;incstack = 0
   564                           ; Regs used in _showDigit: [wreg+status,2+status,0]
   565                           
   566                           
   567                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 19:     PORTB &= 0x0F;
   568     0749  300F               	movlw	15
   569     074A  1283               	bcf	3,5	;RP0=0, select bank0
   570     074B  1303               	bcf	3,6	;RP1=0, select bank0
   571     074C  0586               	andwf	6,f	;volatile
   572                           
   573                           ;C:\Users\mehna\Documents\MPlab projects\PIC Clock.X\main.c: 20:     PORTB |= 0x10 << (d
      +                          igit - 1);
   574     074D  3010               	movlw	16
   575     074E  00F2               	movwf	??_showDigit
   576     074F  0870               	movf	showDigit@digit,w
   577     0750  3EFF               	addlw	255
   578     0751  3E01               	addlw	1
   579     0752  2F55               	goto	u74
   580     0753                     u75:
   581     0753  1003               	clrc
   582     0754  0DF2               	rlf	??_showDigit,f
   583     0755                     u74:
   584     0755  3EFF               	addlw	-1
   585     0756  1D03               	skipz
   586     0757  2F53               	goto	u75
   587     0758  0872               	movf	??_showDigit,w
   588     0759  0486               	iorwf	6,f	;volatile
   589     075A                     l15:
   590     075A  0008               	return
   591     075B                     __end_of_showDigit:
   592     0002                     ___latbits      equ	2
   593     007E                     btemp           set	126	;btemp
   594     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_showDigit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     262
                                              3 COMMON     8     8      0
                          _showDigit
 ---------------------------------------------------------------------------------
 (1) _showDigit                                            3     1      2      26
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _showDigit

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     11      11     78.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      11      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Feb 12 14:07:43 2025

                     l15 075A                       u80 0772                       u81 0771  
                     u74 0755                       u90 0782                       u75 0753  
                     u91 0781                      l701 07E7                      l703 07F0  
                    l641 0749                      l651 0773                      l643 075B  
                    l661 0791                      l653 0782                      l645 0765  
                    l663 0792                      l655 0784                      l647 076E  
                    l673 0799                      l665 0798                      l657 078A  
                    l649 0772                      l681 07A4                      l691 07C6  
                    l683 07A8                      l675 079C                      l659 078B  
                    l693 07CE                      l685 07B1                      l677 079F  
                    l695 07D2                      l687 07B9                      l679 07A2  
                    l697 07DB                      l689 07BD                      l699 07E3  
                    u100 078A                      u101 0789                      u110 0791  
                    u111 0790                      u120 0798                      u121 0797  
                    u137 07B5                      u147 07CA                      u157 07DF  
                    u167 07F4                     _TMR0 0001                     _main 075B  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _TRISB 0086                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0073                   _TMR0IF 005A  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 075B                  __ptext1 0749  
   end_of_initialization 07FC        __end_of_showDigit 075B               main@digit1 0077  
             main@digit2 007A               main@digit3 0078               main@digit4 0079  
    start_initialization 07FC                ___latbits 0002           showDigit@digit 0070  
              _showDigit 0749                main@count 0075               ?_showDigit 0070  
            ??_showDigit 0072               _OPTION_REG 0081  
